/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/*
 * This file is part of the LibreOffice project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */

#ifndef SC_OPENCL_OPINLINFUN_statistical
#define SC_OPENCL_OPINLINFUN_statistical
std::string fBigInvDecl ="#define fBigInv  2.22045e-016\n";
std::string fLogDblMaxDecl ="#define fLogDblMax  log(1.79769e+308)\n";
std::string fHalfMachEpsDecl ="#define fHalfMachEps  0.5*2.22045e-016\n";
std::string fMaxGammaArgumentDecl =
"#define fMaxGammaArgument  171.624376956302\n";

std::string gaussinvDecl = "double gaussinv(double x);\n";
std::string gaussinv =
"double gaussinv(double x)\n"
"{\n"
"    double q,t,z;\n"
"    q=x-0.5;\n"
"    if(fabs(q)<=.425)\n"
"    {\n"
"        t=0.180625-q*q;\n"
"        z=\n"
"            q*\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            t*2509.0809287301226727+33430.575583588128105\n"
"            )\n"
"            *t+67265.770927008700853\n"
"            )\n"
"            *t+45921.953931549871457\n"
"            )\n"
"            *t+13731.693765509461125\n"
"            )\n"
"            *t+1971.5909503065514427\n"
"            )\n"
"            *t+133.14166789178437745\n"
"            )\n"
"            *t+3.387132872796366608\n"
"            )\n"
"            /\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            (\n"
"            t*5226.495278852854561+28729.085735721942674\n"
"            )\n"
"            *t+39307.89580009271061\n"
"            )\n"
"            *t+21213.794301586595867\n"
"            )\n"
"            *t+5394.1960214247511077\n"
"            )\n"
"            *t+687.1870074920579083\n"
"            )\n"
"            *t+42.313330701600911252\n"
"            )\n"
"            *t+1.0\n"
"            );\n"
"    }\n"
"    else\n"
"    {\n"
"        if(q>0) t=1-x;\n"
"        else        t=x;\n"
"        t=sqrt(-log(t));\n"
"        if(t<=5.0)\n"
"        {\n"
"            t+=-1.6;\n"
"            z=\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                t*7.7454501427834140764e-4+0.0227238449892691845833\n"
"                )\n"
"                *t+0.24178072517745061177\n"
"                )\n"
"                *t+1.27045825245236838258\n"
"                )\n"
"                *t+3.64784832476320460504\n"
"                )\n"
"                *t+5.7694972214606914055\n"
"                )\n"
"                *t+4.6303378461565452959\n"
"                )\n"
"                *t+1.42343711074968357734\n"
"                )\n"
"                /\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                t*1.05075007164441684324e-9+5.475938084995344946e-4\n"
"                )\n"
"                *t+0.0151986665636164571966\n"
"                )\n"
"                *t+0.14810397642748007459\n"
"                )\n"
"                *t+0.68976733498510000455\n"
"                )\n"
"                *t+1.6763848301838038494\n"
"                )\n"
"                *t+2.05319162663775882187\n"
"                )\n"
"                *t+1.0\n"
"                );\n"
"        }\n"
"        else\n"
"        {\n"
"            t+=-5.0;\n"
"            z=\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                t*2.01033439929228813265e-7+2.71155556874348757815e-5\n"
"                )\n"
"                *t+0.0012426609473880784386\n"
"                )\n"
"                *t+0.026532189526576123093\n"
"                )\n"
"                *t+0.29656057182850489123\n"
"                )\n"
"                *t+1.7848265399172913358\n"
"                )\n"
"                *t+5.4637849111641143699\n"
"                )\n"
"                *t+6.6579046435011037772\n"
"                )\n"
"                /\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                (\n"
"                t*2.04426310338993978564e-15+1.4215117583164458887e-7\n"
"                )\n"
"                *t+1.8463183175100546818e-5\n"
"                )\n"
"                *t+7.868691311456132591e-4\n"
"                )\n"
"                *t+0.0148753612908506148525\n"
"                )\n"
"                *t+0.13692988092273580531\n"
"                )\n"
"                *t+0.59983220655588793769\n"
"                )\n"
"                *t+1.0\n"
"                );\n"
"        }\n"
"        if(q<0.0) z=-z;\n"
"    }\n"
"    return z;\n"
"}\n";


#endif

/* vim:set shiftwidth=4 softtabstop=4 expandtab: */

